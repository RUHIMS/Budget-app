{"version":3,"sources":["components/ExpenseListItem.js","actions/expenses.js","selectors/expenses.js","components/ExpenseList.js","actions/filters.js","components/ExpenseListFilters.js","components/ExpenseDashbordPage.js","components/ExpenseForm.js","components/AddExpensePage.js","components/EditExpensePage.js","components/HelpPage.js","components/PageNotFound.js","components/Header.js","routers/AppRouter.js","reducers/expenses.js","reducers/filters.js","serviceWorker.js","index.js","store/configurestore.js"],"names":["connect","_ref","dispatch","id","description","amount","createdAt","react_default","a","createElement","Link","to","concat","onClick","type","arguments","length","undefined","removeExpense","getVisibleExpenses","expenses","text","sortBy","startDate","endDate","filter","expense","createdAtMoment","moment","startDateMatch","isSameOrBefore","endDateMatch","isSameOrAfter","textMatch","toLowerCase","includes","sort","b","state","filters","props","map","components_ExpenseListItem","Object","assign","key","setStartDate","setEndDate","ExpenseListFilters","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onDatesChange","onFocusChange","calendarFocused","setState","_this2","value","onChange","e","setTextFilter","target","react_dates","focusedInput","showClearDates","numberOfMonths","isOutsideRange","React","Component","ExpenseDashbordPage","components_ExpenseListFilters","components_ExpenseList","now","console","log","format","ExpenseForm","onDescriptionChange","onNoteChange","note","focused","calenderFocused","onDateChange","onAmountChange","match","onSubmit","preventDefault","errorMsg","parseFloat","valueOf","toString","placeholder","autoFocus","date","ExpenseForm_ExpenseForm","_ref$description","_ref$note","_ref$amount","_ref$createdAt","uuid","addExpense","history","push","find","params","_ref3","updates","editExpense","HelpPage","PageNotFound","Header","NavLink","activeClassName","exact","AppRouter","BrowserRouter","components_Header","Switch","Route","path","component","AddExpensePage","EditExpensePage","expenseReducerdefaultstate","expenseReducer","action","toConsumableArray","objectSpread","filtersReducerdefaultstate","startOf","endOf","filtersReducer","Boolean","window","location","hostname","store","createStore","combineReducers","__REDUX_DEVTOOLS_EXTENSION__","jsx","es","routers_AppRouter","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.58d0a48c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {removeExpense} from '../actions/expenses';\r\n\r\nconst ExpenseListItem = ({dispatch,id,description,amount,createdAt}) =>(\r\n    <div>\r\n        <Link to={`/edit/${id}`}>\r\n        <h3>{description}</h3>\r\n        </Link>\r\n      \r\n      <p>{amount} - {createdAt}</p>\r\n      <button onClick={()=>{\r\n          dispatch(removeExpense({id}))\r\n \r\n      }}>Remove</button>\r\n    </div>\r\n\r\n    \r\n)\r\n\r\n\r\n\r\nexport default connect()(ExpenseListItem);","import uuid from 'uuid'; \r\n/*require(\"@babel/core\").transform(\"code\", {\r\n    plugins: [\"@babel/plugin-proposal-object-rest-spread\"]\r\n  });*/\r\n\r\nexport const addExpense = (\r\n    {\r\n        description='',\r\n        note='',\r\n        amount=0,\r\n        createdAt=0\r\n    }={}) =>(\r\n\r\n    {\r\n        type:'ADD_EXPENSE',\r\n        expense: {\r\n            id: uuid(),\r\n            description,\r\n            note,\r\n            amount,\r\n            createdAt\r\n\r\n        }\r\n    }\r\n)\r\n\r\nexport const removeExpense = ({id} = {}) =>(\r\n    { \r\n        type:'REMOVE_EXPENSE',\r\n        id\r\n    }\r\n   \r\n)\r\n\r\nexport const editExpense = ({id,updates}={}) =>(\r\n{\r\n    type: 'EDIT_EXPENSE',\r\n    id,\r\n    updates\r\n}\r\n    \r\n\r\n)\r\n","import  moment  from 'moment';\r\n\r\nconst getVisibleExpenses=(expenses,{text,sortBy,startDate,endDate})=>{\r\n\r\n    return expenses.filter((expense) =>  {\r\n\r\n        const createdAtMoment=moment(expense.createdAt);\r\n\r\n        const startDateMatch = startDate ? startDate.isSameOrBefore(createdAtMoment,'day') : true;\r\n        const endDateMatch = endDate ? endDate.isSameOrAfter(createdAtMoment,'day') : true;\r\n        const textMatch = expense.description.toLowerCase().includes(text.toLowerCase());\r\n\r\n        return startDateMatch && endDateMatch && textMatch;\r\n\r\n    }).sort((a,b)=>{\r\n        if (sortBy === 'date')\r\n        {\r\n            return a.createdAt < b.createdAt ? 1 :-1;\r\n        }\r\n\r\n        if (sortBy === 'amount')\r\n        {\r\n            return a.amount < b.amount ? 1 : -1;\r\n        }\r\n         \r\n\r\n    });\r\n\r\n}\r\n\r\nexport default getVisibleExpenses;","  import React from 'react';\r\n  import { connect } from 'react-redux';\r\n  import ExpenseListItem from './ExpenseListItem';\r\n  import getVisibleExpenses from '../selectors/expenses';\r\n\r\n    const ExpenseList =(props) =>(\r\n    <div>\r\n    <h2>Expense List</h2> \r\n    {props.expense.map((expense)=>{\r\n       return <ExpenseListItem key={expense.id} {...expense}/>\r\n\r\n    })\r\n}\r\n    \r\n    \r\n</div>\r\n  )\r\n\r\n  /*const ConnectedExpenseList = connect((state)=>{\r\n      return {\r\n          expense: state.expenses\r\n      }\r\n  })(ExpenseList)\r\n     \r\n  export default ConnectedExpenseList;*/\r\n\r\n  const mapStateToProps = (state) =>{\r\n      return {\r\n          expense:getVisibleExpenses(state.expenses,state.filters)\r\n         \r\n      }\r\n  }\r\n\r\n  export default connect(mapStateToProps)(ExpenseList);\r\n ","export const setTextFilter =(text='') =>(\r\n    {\r\n         type:'SET_TEXT_FILTER' ,\r\n         text\r\n    }\r\n)\r\n    \r\nexport const sortbyAmount =()=>(\r\n    {\r\n        type: 'SORT_BY_AMOUNT',\r\n\r\n    }\r\n)\r\n\r\nexport const sortbyDate = () =>(\r\n    {\r\n        type: 'SORT_BY_DATE'\r\n    }\r\n)\r\n\r\nexport const setStartDate = (startDate= undefined ) =>(\r\n    {\r\n       type : 'SET_START_DATE',\r\n       startDate\r\n\r\n    }\r\n)\r\n\r\nexport const setEndDate = (endDate=undefined)=> (\r\n    {\r\n        type: 'SET_END_DATE',\r\n        endDate\r\n    }\r\n)\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {setTextFilter,sortbyDate,sortbyAmount,setStartDate,setEndDate } from '../actions/filters';\r\nimport {DateRangePicker} from 'react-dates';\r\n\r\nclass ExpenseListFilters extends React.Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={\r\n            calendarFocused: null\r\n        }\r\n    }\r\n\r\n    onDatesChange=({startDate,endDate})=>{\r\n        this.props.dispatch(setStartDate(startDate));\r\n        this.props.dispatch(setEndDate(endDate));\r\n\r\n    }\r\n\r\n    onFocusChange=(calendarFocused)=>{\r\n        this.setState(()=>(\r\n            {calendarFocused}\r\n            )\r\n        )\r\n\r\n    }\r\nrender(){\r\n    return(\r\n        <div>\r\n        <input type=\"text\" value={this.props.filter.text} onChange={(e)=>{\r\n           this.props.dispatch(setTextFilter(e.target.value))\r\n        \r\n\r\n        }} />\r\n        <select\r\n           value={this.props.filter.sortBy}\r\n           onChange={(e)=>{ \r\n               if(e.target.value==='date')\r\n               {\r\n                  this.props.dispatch(sortbyDate())\r\n               }\r\n               if(e.target.value === 'amount')\r\n               {\r\n                   this.props.dispatch(sortbyAmount())\r\n               }\r\n\r\n           }}\r\n        >\r\n            <option value=\"date\">Date</option>\r\n            <option value=\"amount\">Amount</option>\r\n        \r\n        </select>\r\n        <DateRangePicker \r\n        startDate={this.props.filter.startDate}\r\n        endDate={this.props.filter.endDate}\r\n        onDatesChange={this.onDatesChange}\r\n        focusedInput={this.state.calendarFocused}\r\n        onFocusChange={this.onFocusChange}\r\n        showClearDates={true}\r\n        numberOfMonths={1}\r\n        isOutsideRange={()=>false}/>\r\n        \r\n    </div>\r\n    )\r\n}\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n return {\r\n     filter: state.filters\r\n }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ExpenseListFilters);","import React from 'react';\r\nimport ConnectedExpenseList from './ExpenseList';\r\nimport ExpenseListFiletrs from './ExpenseListFilters';\r\n\r\nconst ExpenseDashbordPage= () => (\r\n    <div>\r\n        <ExpenseListFiletrs />\r\n        <ConnectedExpenseList />\r\n        \r\n    </div>\r\n\r\n);\r\n\r\nexport default ExpenseDashbordPage;","import React from 'react';\r\nimport moment from 'moment';\r\nimport { SingleDatePicker } from 'react-dates';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport 'react-dates/initialize';\r\n\r\nconst now=moment();\r\nconsole.log(now.format('MMM Do, YYYY'));\r\n\r\nexport default class ExpenseForm extends React.Component {\r\n  constructor(props)\r\n  {\r\n      super(props);\r\n      this.state={\r\n          description:props.expense ? props.expense.description : '',\r\n          note:props.expense ? props.expense.note : '',\r\n          amount:props.expense ? props.expense.amount.toString() : '',\r\n          createdAt: props.expense ? moment(props.expense.createdAt) : moment(),\r\n          calenderFocused: false,\r\n          errorMsg:\"\"\r\n\r\n      }\r\n  }\r\n\r\n  onDescriptionChange=(e)=>{\r\n     const description = e.target.value;\r\n     this.setState(()=>({description}))\r\n  }\r\n\r\n  onNoteChange=(e)=>{\r\n      const note=e.target.value;\r\n      this.setState(()=>(\r\n          {note}\r\n      ))\r\n  }\r\n\r\n  onFocusChange = ({focused}) => {\r\n   this.setState(()=>({\r\n       calenderFocused: focused\r\n   })) \r\n  }\r\n  onDateChange = (createdAt)=>{\r\n      if(createdAt)\r\n      {\r\n        this.setState(()=> ({\r\n            createdAt\r\n        }))\r\n      }\r\n   \r\n  }\r\n      \r\n  \r\n\r\n  \r\n    \r\n  \r\n  onAmountChange = (e) =>{\r\n      const amount=e.target.value;\r\n      if(!amount || amount.match(/^\\d{1,}(\\.\\d{0,2})?$/))\r\n      {\r\n        this.setState(()=>({\r\n            amount\r\n        }))\r\n      }\r\n     \r\n  }\r\n  \r\n  onSubmit= (e) =>{\r\n     e.preventDefault();\r\n     if(!this.state.amount || !this.state.description)\r\n     {\r\n        this.setState(()=>({\r\n           errorMsg: \"Please fill in description and amount\"\r\n        }))\r\n     } \r\n     else\r\n     {\r\n        this.setState(()=>({\r\n            errorMsg:\"\"\r\n            \r\n        }))\r\n        this.props.onSubmit({\r\n            description:this.state.description,\r\n            amount:parseFloat(this.state.amount,10),\r\n            createdAt: this.state.createdAt.valueOf( ),\r\n            note:this.state.note\r\n        })\r\n     }\r\n  }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.state.errorMsg && <p>{this.state.errorMsg }</p>}\r\n               <form onSubmit={this.onSubmit}>\r\n                   <input type=\"text\" \r\n                    placeholder=\"description\"\r\n                    autoFocus\r\n                    value={this.state.description}\r\n                    onChange={this.onDescriptionChange}\r\n                   />\r\n                    <input type=\"text\"\r\n                    placeholder=\"Amount\" \r\n                value={this.state.amount}\r\n                onChange={this.onAmountChange}/>\r\n                    <br />\r\n\r\n                    <SingleDatePicker\r\n                        date={this.state.createdAt} \r\n                        onDateChange={this.onDateChange} \r\n                        focused={this.state.calenderFocused} \r\n                        onFocusChange={this.onFocusChange}\r\n                        numberOfMonths={1} \r\n                        isOutsideRange={()=> false}\r\n  \r\n/>\r\n                    <textarea \r\n                    placeholder=\"Note for the Expense (optional)\"\r\n                    value={this.state.note}\r\n                    onChange={this.onNoteChange}\r\n                    >\r\n                    </textarea>\r\n                    <button>Add Expense</button>\r\n                    \r\n               </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ExpenseForm  from './ExpenseForm';\r\nimport { addExpense } from '../actions/expenses';\r\nimport { connect } from 'react-redux';\r\n\r\nconst AddExpensePage= (props) => (\r\n    <div>\r\n        \r\n        <ExpenseForm \r\n        onSubmit={(expense)=>{\r\n            props.dispatch(addExpense(expense));\r\n            props.history.push('/');\r\n        }} />\r\n    </div>\r\n\r\n);\r\n\r\nexport default connect()(AddExpensePage);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport { editExpense } from '../actions/expenses';\r\n\r\n\r\nconst EditExpensePage = (props) => {\r\n    return (\r\n        \r\n        <div>\r\n            \r\n            <ExpenseForm\r\n            expense={props.expense}\r\n            \r\n            onSubmit={(expense)=>{\r\n                props.dispatch(editExpense(props.expense.id,expense))\r\n                props.history.push('/');\r\n            }} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state,props) =>{\r\nreturn{\r\n\r\n    expense: state.expenses.find((expense)=>expense.id===props.match.params.id)\r\n        \r\n        \r\n}\r\n\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps) (EditExpensePage);","import React from 'react';\r\nconst HelpPage = () => (\r\n    <p>This is Help Page</p>\r\n   )\r\n\r\n   export default HelpPage;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nconst PageNotFound = () => (\r\n    <div>\r\n        <h2>404! Page Not Found</h2>\r\n        <Link to=\"/\">Go To Home</Link>\r\n    </div>\r\n)\r\n\r\nexport default PageNotFound;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nconst Header = () => (\r\n    <div>\r\n        <h1>Your Budget</h1>\r\n        <NavLink to=\"/\" activeClassName=\"is-active\" exact={true}>Home</NavLink>\r\n        <br />\r\n        <NavLink to=\"/create\" activeClassName=\"is-active\">Create Exp</NavLink>\r\n        <NavLink to=\"/edit\" activeClassName=\"is-active\">Edit Exp</NavLink>\r\n        <NavLink to=\"/help\" activeClassName=\"is-active\">Help</NavLink>\r\n    </div>\r\n\r\n);\r\n\r\nexport default Header;\r\n\r\n","import { BrowserRouter, Route,Switch} from 'react-router-dom';\r\nimport React from 'react';\r\nimport ExpenseDashbordPage from './../components/ExpenseDashbordPage';\r\nimport AddExpensePage from './../components/AddExpensePage';\r\nimport EditExpensePage from './../components/EditExpensePage';\r\nimport HelpPage from './../components/HelpPage';\r\nimport PageNotFound from './../components/PageNotFound';\r\nimport Header from './../components/Header';\r\n\r\nconst AppRouter = () =>(\r\n    <BrowserRouter>\r\n    <div>\r\n        <Header />\r\n    <Switch>\r\n    <Route path=\"/\" component={ExpenseDashbordPage} exact={true}/>\r\n    <Route path=\"/create\" component={AddExpensePage}/>\r\n    <Route path=\"/edit/:id\" component={EditExpensePage}/>\r\n    <Route path=\"/help\" component={HelpPage}/>\r\n    <Route component={PageNotFound} />\r\n    </Switch>\r\n\r\n    </div>\r\n </BrowserRouter>\r\n)\r\n\r\nexport default AppRouter;\r\n\r\n","const expenseReducerdefaultstate=[];\r\n\r\nconst expenseReducer = (state = expenseReducerdefaultstate,action) =>{\r\n\r\n    switch (action.type) {\r\n        case 'ADD_EXPENSE' :\r\n         return  [...state,action.expense];\r\n        \r\n         case 'REMOVE_EXPENSE' :\r\n         return state.filter(({id})=>{\r\n             return id!==action.id;\r\n         })\r\n\r\n         case 'EDIT_EXPENSE' :\r\n         return state.map((expense)=>{\r\n             if(expense.id === action.id)\r\n             {\r\n               return {\r\n                ...expense,\r\n                ...action.updates\r\n                \r\n               }\r\n            }\r\n             else {\r\n                 return expense;\r\n             }\r\n\r\n         })\r\n          \r\n\r\n        default: \r\n        return state;\r\n    }\r\n}\r\n\r\nexport default expenseReducer;","import moment from 'moment';\r\n\r\nconst filtersReducerdefaultstate={\r\n    text:'',\r\n    sortBy: 'date',\r\n    startDate: moment().startOf('month'),\r\n    endDate: moment().endOf('month')\r\n\r\n};\r\n\r\nconst filtersReducer = (state= filtersReducerdefaultstate,action) =>{\r\n    switch (action.type){\r\n\r\n        case 'SET_TEXT_FILTER' :\r\n        return {\r\n            ...state,\r\n            text:action.text\r\n        }\r\n\r\n        case 'SORT_BY_AMOUNT' :\r\n        return {\r\n            ...state,\r\n            sortBy:'amount'\r\n        }\r\n\r\n        case 'SORT_BY_DATE':\r\n        return {\r\n            ...state,\r\n            sortBy: 'date'\r\n        }\r\n\r\n        case 'SET_START_DATE' :\r\n        return {\r\n            ...state,\r\n            startDate:action.startDate\r\n\r\n        }\r\n\r\n        case 'SET_END_DATE':\r\n        return {\r\n            ...state,\r\n            endDate:action.endDate\r\n        }\r\n        default: \r\n        return state;\r\n    }\r\n\r\n}\r\n\r\nexport default filtersReducer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppRouter from './routers/AppRouter';\nimport configureStore from './store/configurestore';\nimport {addExpense} from './actions/expenses';\nimport {setTextFilter} from './actions/filters';\nimport getVisibleExpenses from './selectors/expenses';\nimport { Provider } from 'react-redux';\n \n//import './index.css';\n//import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './App.scss';\n\n/*store.dispatch(addExpense({description:'Water bill', amount:'450'}));\nstore.dispatch(addExpense({description:'Electricity bill',amount:'500',createdAt: '10000'}));\nstore.dispatch(addExpense({description:'Garbage bill',amount:'40',createdAt:'100'}));\nstore.dispatch(addExpense({description:'House Rent',amount:'1300'}));\n\n\nstore.dispatch(setTextFilter('bill'));\n\nconst state=store.getState();\nconst VisibleExpenses=getVisibleExpenses(state.expenses,state.filters);\nconsole.log(VisibleExpenses);*/\nconst store = configureStore();\nconst jsx=(<Provider store={store}>\n<AppRouter />\n</Provider>)\n\nReactDOM.render(jsx, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n","import {createStore,combineReducers} from 'redux';\r\nimport expenseReducer from '../reducers/expenses';\r\nimport filtersReducer from '../reducers/filters';\r\n\r\nexport default () =>{\r\n\r\n    const store= createStore(\r\n        combineReducers(\r\n            {\r\n                expenses: expenseReducer,\r\n                filters:filtersReducer\r\n            }\r\n        ),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    );\r\n\r\n    return store;\r\n}\r\n\r\n\r\n "],"sourceRoot":""}